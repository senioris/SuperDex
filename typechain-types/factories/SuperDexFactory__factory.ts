/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  SuperDexFactory,
  SuperDexFactoryInterface,
} from "../SuperDexFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d12806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063531aa03e1461003b578063e34336151461006b575b600080fd5b6100556004803603810190610050919061062c565b61009b565b604051610062919061067b565b60405180910390f35b6100856004803603810190610080919061062c565b6100dd565b604051610092919061067b565b60405180910390f35b60006020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361014d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014490610719565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161061018a57838561018d565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f790610785565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461030a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610301906107f1565b60405180910390fd5b6000828260405160200161031f929190610859565b604051602081830303815290604052805190602001209050600081604051610346906105bc565b8190604051809103906000f5905080158015610366573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b81526004016103a4929190610885565b600060405180830381600087803b1580156103be57600080fd5b505af11580156103d2573d6000803e3d6000fd5b50505050809450846000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b876040516105aa919061067b565b60405180910390a35050505092915050565b61042e806108af83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105f9826105ce565b9050919050565b610609816105ee565b811461061457600080fd5b50565b60008135905061062681610600565b92915050565b60008060408385031215610643576106426105c9565b5b600061065185828601610617565b925050602061066285828601610617565b9150509250929050565b610675816105ee565b82525050565b6000602082019050610690600083018461066c565b92915050565b600082825260208201905092915050565b7f5375706572446578466163746f72793a204944454e544943414c5f414444524560008201527f5353455300000000000000000000000000000000000000000000000000000000602082015250565b6000610703602483610696565b915061070e826106a7565b604082019050919050565b60006020820190508181036000830152610732816106f6565b9050919050565b7f5375706572446578466163746f72793a205a45524f5f41444452455353000000600082015250565b600061076f601d83610696565b915061077a82610739565b602082019050919050565b6000602082019050818103600083015261079e81610762565b9050919050565b7f5375706572446578466163746f72793a20504f4f4c5f45584953545300000000600082015250565b60006107db601c83610696565b91506107e6826107a5565b602082019050919050565b6000602082019050818103600083015261080a816107ce565b9050919050565b60008160601b9050919050565b600061082982610811565b9050919050565b600061083b8261081e565b9050919050565b61085361084e826105ee565b610830565b82525050565b60006108658285610842565b6014820191506108758284610842565b6014820191508190509392505050565b600060408201905061089a600083018561066c565b6108a7602083018461066c565b939250505056fe60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516103c86100666000396000818160ed015261020001526103c86000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630dfe168114610051578063485cc9551461006f578063c45a01551461008b578063d21220a7146100a9575b600080fd5b6100596100c7565b6040516100669190610289565b60405180910390f35b610089600480360381019061008491906102d5565b6100eb565b005b6100936101fe565b6040516100a09190610289565b60405180910390f35b6100b1610222565b6040516100be9190610289565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017090610372565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061027382610248565b9050919050565b61028381610268565b82525050565b600060208201905061029e600083018461027a565b92915050565b600080fd5b6102b281610268565b81146102bd57600080fd5b50565b6000813590506102cf816102a9565b92915050565b600080604083850312156102ec576102eb6102a4565b5b60006102fa858286016102c0565b925050602061030b858286016102c0565b9150509250929050565b600082825260208201905092915050565b7f5375706572446578506f6f6c3a20464f5242494444454e000000000000000000600082015250565b600061035c601783610315565b915061036782610326565b602082019050919050565b6000602082019050818103600083015261038b8161034f565b905091905056fea2646970667358221220c65c9ada1911c8cbd29178abe151e5f15a5e4096276749c314a6262b9d38c01b64736f6c63430008130033a2646970667358221220b6d5e7fe4537f8a3b08acf22bb22d2f42f8b729b9b052ebe6395dc5cfc8c362d64736f6c63430008130033";

type SuperDexFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SuperDexFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SuperDexFactory__factory extends ContractFactory {
  constructor(...args: SuperDexFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SuperDexFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SuperDexFactory__factory {
    return super.connect(runner) as SuperDexFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SuperDexFactoryInterface {
    return new Interface(_abi) as SuperDexFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SuperDexFactory {
    return new Contract(address, _abi, runner) as unknown as SuperDexFactory;
  }
}
